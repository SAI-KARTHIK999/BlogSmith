'use server';

/**
 * @fileOverview A content generation AI agent.
 *
 * - generateContentFromPrompt - A function that handles the content generation process.
 * - GenerateContentFromPromptInput - The input type for the generateContentFromPrompt function.
 * - GenerateContentFromPromptOutput - The return type for the generateContentFromPrompt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateContentFromPromptInputSchema = z.object({
  contentType: z.enum(['blog', 'tweet', 'email', 'ad copy']).describe('The type of content to generate.'),
  length: z.string().describe('The desired length of the content (e.g., short, medium, long).'),
  tone: z.string().describe('The desired tone of the content (e.g., formal, informal, humorous).'),
  prompt: z.string().describe('The initial prompt to guide content generation.'),
});
export type GenerateContentFromPromptInput = z.infer<typeof GenerateContentFromPromptInputSchema>;

const GenerateContentFromPromptOutputSchema = z.object({
  generatedContent: z.string().describe('The content generated by the AI.'),
});
export type GenerateContentFromPromptOutput = z.infer<typeof GenerateContentFromPromptOutputSchema>;

export async function generateContentFromPrompt(input: GenerateContentFromPromptInput): Promise<GenerateContentFromPromptOutput> {
  const result = await generateContentFromPromptFlow(input);
  return result;
}

const prompt = ai.definePrompt({
  name: 'generateContentFromPrompt',
  input: {schema: GenerateContentFromPromptInputSchema},
  output: {schema: GenerateContentFromPromptOutputSchema},
  prompt: `You are an AI content generator. Generate content based on the following specifications:

Content Type: {{{contentType}}}
Length: {{{length}}}
Tone: {{{tone}}}
Prompt: {{{prompt}}}`,
});

const generateContentFromPromptFlow = ai.defineFlow(
  {
    name: 'generateContentFromPromptFlow',
    inputSchema: GenerateContentFromPromptInputSchema,
    outputSchema: GenerateContentFromPromptOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    if (!output) {
      throw new Error('Content generation failed.');
    }
    return output;
  }
);
